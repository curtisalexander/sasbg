#!/bin/bash

########
# vars #
########

DT=$(date "+%Y-%m-%d_%H-%M-%S")
DTSWITCH=""
SASLOG=""
_SASLOG=""
__SASLOG=""
SASPROGAM=""
_SASPROGAM=""
SASPID=""
BASEDIR=""
ABSBASEDIR=""
LOGEXT=""

########
# fncs #
########

display_help() {
    echo
    echo "Run a SAS program in background, optionally redirecting the SAS log."
    echo "If neither log option (--log or --logdt) is used, or if --dt option"
    echo "  is used, then the log is written to the same directory as the"
    echo "  SAS program."
    echo
    echo "Usage: ${0} [option...] [SAS program] "
    echo
    echo "  -h, --help          display help"
    echo "  -l, --log <file>    redirect log"
    echo "  --logdt <file>      redirect log, appending datetime to log filename"
    echo "  --dt                append datetime to log filename, writing log to"
    echo "                        same directory as SAS program"
    echo
    echo "Example: "
    echo "  ${0} --log '/dir/to/log/myprogram.log' myprogram.sas    # write log to specific directory"
    echo "  ${0} --logdt '/dir/to/log/myprogram.log' myprogram.sas  # write log with datetime appended to"
    echo "                                                          #   log filename to specific directory"
    echo "  ${0} myprogram.sas          # write log to same directory as SAS program" 
    echo "  ${0} --dt myprogram.sas     # write log with datetime appended to log filename"
    echo "                              #   to same directory as SAS program"
}

create_logname() {
    __SASLOG="${_SASPROGRAM%.sas}.log"
}

create_logdt() {
    _SASLOG="${__SASLOG%.log}_${DT}.log"
}

get_extension() {
    # $1 = filename
    local FILENAME="$(basename "$1")"
    local EXT="${FILENAME##*.}"
    local FILE="${FILENAME%.*}"
    echo $EXT
}

########
# args #
########

# Use > 1 to consume two arguments per pass in the loop
#   each argument has a corresponding value to go with it
# Use > 0 to consume one or more arguments per pass in the loop
#   some arguments don't have a corresponding value to go with it

while [[ $# > 0 ]]; do
    key="$1"

    case $key in
        -h | --help)
            display_help
            exit 0
            ;;
        -l | --log)
            _SASLOG="$2"
            shift
            ;;
        --logdt)
            __SASLOG="$2"
            create_logdt
            shift
            ;;
        --dt)
            DTSWITCH="1"
            ;;
        *)
            _SASPROGRAM="$1"
            ;;
    esac

    shift

done

#######
# run #
#######

SASPROGRAM="$(readlink -m ${_SASPROGRAM})"

# -n = true if the length of the string is non-zero
if [ -n "${_SASLOG}" ]; then
    SASLOG="$(readlink -m ${_SASLOG})"
else
    # determine whether to append datetime log
    if [ -n "${DTSWITCH}" ]; then
        create_logname  # requires $_SASPROGRAM and returns $__SASLOG
        create_logdt    # requires $__SASLOG and returns $_SASLOG
    else
        _SASLOG="${_SASPROGRAM%.sas}.log"
    fi
    BASEDIR="$(dirname ${_SASPROGRAM})"
    ABSBASEDIR="$(readlink -m ${BASEDIR})"
    SASLOG="${ABSBASEDIR}/$(basename ${_SASLOG})"
fi

# make sure we are not overwriting the SAS program
LOGEXT="$(get_extension ${SASLOG})"
if [ "${LOGEXT}" == "sas" ]; then
    echo
    echo "The log file extension is *.sas, potentially overwriting"
    echo "  the SAS program.  Please check that this is the desired output."
    echo
    exit 0
fi

nohup sas -log "$SASLOG" $SASPROGRAM > /dev/null 2>&1 &
SASPID="$!"

########
# echo #
########

echo 
echo "Running SAS program"
echo "  $SASPROGRAM"
echo
echo "PID of SAS program"
echo "  $SASPID"
echo
echo "SAS log written to"
echo "  $SASLOG"
echo 
